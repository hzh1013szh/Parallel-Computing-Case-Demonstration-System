{"ast":null,"code":"import request from \"@/utils/request\";\nimport PostItem from \"@/views/Post/PostItem.vue\";\nexport default {\n  name: \"MyFavoriteView\",\n  components: {\n    PostItem\n  },\n  data() {\n    return {\n      params: {\n        idlist: [],\n        pageNum: 1,\n        pageSize: 3\n      },\n      total: 0,\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {},\n      allData: []\n    };\n  },\n  created() {\n    this.getMyFavoritePost();\n  },\n  mounted() {\n    this.getMyFavoritePost();\n  },\n  methods: {\n    getMyFavoritePost() {\n      request.get(`/favorite/post/${this.user.id}`).then(res => {\n        if (res.code === \"0\") {\n          this.params.idlist = res.data;\n          console.log(this.params.idlist);\n          this.getPost();\n        } else {\n          this.$message({\n            type: 'error',\n            message: res.msg\n          });\n        }\n      });\n    },\n    getPost() {\n      request.get(\"/post\", {\n        params: this.params\n      }).then(res => {\n        if (res.code === \"0\") {\n          this.allData = res.data.list;\n          this.total = res.data.total;\n        } else {\n          this.$message({\n            type: 'error',\n            message: res.msg\n          });\n        }\n      });\n    },\n    handleSizeChange(pageSize) {\n      this.params.pageSize = pageSize;\n      this.getMyPost();\n    },\n    handleCurrentChange(currentPage) {\n      this.params.pageNum = currentPage;\n      this.getMyPost();\n    }\n  }\n};","map":{"version":3,"names":["request","PostItem","name","components","data","params","idlist","pageNum","pageSize","total","user","localStorage","getItem","JSON","parse","allData","created","getMyFavoritePost","mounted","methods","get","id","then","res","code","console","log","getPost","$message","type","message","msg","list","handleSizeChange","getMyPost","handleCurrentChange","currentPage"],"sources":["src/views/person/MyFavoriteView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <template v-if=\"allData.length > 0\">\r\n      <PostItem v-for=\"a in allData\" :key=\"a.id\" v-bind=\"a\" />\r\n    </template>\r\n    <el-empty\r\n        v-else\r\n        :image-size=\"250\"\r\n        description=\"暂未发表任何需求额\"\r\n    ></el-empty>\r\n    <div style=\"margin-top: 15px\">\r\n      <el-pagination\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page=\"params.pageNum\"\r\n          :page-sizes=\"[3, 6, 9, 12]\"\r\n          :page-size=\"params.pageSize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"total\">\r\n      </el-pagination>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\nimport PostItem from \"@/views/Post/PostItem.vue\";\r\n\r\nexport default {\r\n  name: \"MyFavoriteView\" ,\r\n  components: {PostItem},\r\n  data(){\r\n    return{\r\n      params:{\r\n        idlist: [],\r\n        pageNum: 1,\r\n        pageSize: 3,\r\n      },\r\n      total: 0,\r\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {},\r\n      allData: [],\r\n    }\r\n  },\r\n  created() {\r\n    this.getMyFavoritePost();\r\n  },\r\n  mounted() {\r\n    this.getMyFavoritePost();\r\n  },\r\n  methods: {\r\n    getMyFavoritePost(){\r\n      request.get(`/favorite/post/${this.user.id}`).then(res => {\r\n        if(res.code === \"0\"){\r\n          this.params.idlist = res.data;\r\n          console.log(this.params.idlist);\r\n          this.getPost();\r\n        }\r\n        else{\r\n          this.$message({\r\n            type: 'error',\r\n            message: res.msg\r\n          });\r\n        }\r\n     })\r\n    },\r\n    getPost(){\r\n      request.get(\"/post\",{params:this.params}).then(res => {\r\n        if(res.code === \"0\"){\r\n          this.allData = res.data.list;\r\n          this.total = res.data.total;\r\n        }\r\n        else{\r\n          this.$message({\r\n            type: 'error',\r\n            message: res.msg\r\n          });\r\n        }\r\n      })\r\n    },\r\n    handleSizeChange(pageSize){\r\n      this.params.pageSize = pageSize;\r\n      this.getMyPost();\r\n    },\r\n    handleCurrentChange(currentPage){\r\n      this.params.pageNum = currentPage;\r\n      this.getMyPost();\r\n    },\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n\r\n</style>"],"mappings":"AAyBA,OAAAA,OAAA;AACA,OAAAC,QAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IAAAF;EAAA;EACAG,KAAA;IACA;MACAC,MAAA;QACAC,MAAA;QACAC,OAAA;QACAC,QAAA;MACA;MACAC,KAAA;MACAC,IAAA,EAAAC,YAAA,CAAAC,OAAA,WAAAC,IAAA,CAAAC,KAAA,CAAAH,YAAA,CAAAC,OAAA;MACAG,OAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,iBAAA;EACA;EACAC,QAAA;IACA,KAAAD,iBAAA;EACA;EACAE,OAAA;IACAF,kBAAA;MACAjB,OAAA,CAAAoB,GAAA,wBAAAV,IAAA,CAAAW,EAAA,IAAAC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAnB,MAAA,CAAAC,MAAA,GAAAiB,GAAA,CAAAnB,IAAA;UACAqB,OAAA,CAAAC,GAAA,MAAArB,MAAA,CAAAC,MAAA;UACA,KAAAqB,OAAA;QACA,OACA;UACA,KAAAC,QAAA;YACAC,IAAA;YACAC,OAAA,EAAAP,GAAA,CAAAQ;UACA;QACA;MACA;IACA;IACAJ,QAAA;MACA3B,OAAA,CAAAoB,GAAA;QAAAf,MAAA,OAAAA;MAAA,GAAAiB,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAT,OAAA,GAAAQ,GAAA,CAAAnB,IAAA,CAAA4B,IAAA;UACA,KAAAvB,KAAA,GAAAc,GAAA,CAAAnB,IAAA,CAAAK,KAAA;QACA,OACA;UACA,KAAAmB,QAAA;YACAC,IAAA;YACAC,OAAA,EAAAP,GAAA,CAAAQ;UACA;QACA;MACA;IACA;IACAE,iBAAAzB,QAAA;MACA,KAAAH,MAAA,CAAAG,QAAA,GAAAA,QAAA;MACA,KAAA0B,SAAA;IACA;IACAC,oBAAAC,WAAA;MACA,KAAA/B,MAAA,CAAAE,OAAA,GAAA6B,WAAA;MACA,KAAAF,SAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}