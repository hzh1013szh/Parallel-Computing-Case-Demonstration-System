{"ast":null,"code":"import request from \"@/utils/request\";\nimport * as echarts from 'echarts';\nexport default {\n  name: 'HomeView',\n  data() {\n    return {\n      activeName: '1',\n      tableData: [],\n      imgUrl: require('@/assets/img3.png'),\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {}\n    };\n  },\n  mounted() {\n    this.getNewNotice();\n    this.initdata();\n  },\n  methods: {\n    getNewNotice() {\n      request.get(\"/notice\").then(res => {\n        if (res.code === \"0\") {\n          this.tableData = res.data;\n          this.activeName = res.data[0].id;\n        } else {\n          this.$message({\n            type: 'error',\n            message: res.msg\n          });\n        }\n      });\n    },\n    initdata() {\n      request.get(\"/admin/echarts/role_pie\").then(res => {\n        if (res.code === \"0\") {\n          this.initRolePie(res.data);\n        } else {\n          this.$message({\n            type: 'error',\n            message: res.msg\n          });\n        }\n      });\n      request.get(\"post/echarts/pie\").then(res => {\n        if (res.code === \"0\") {\n          this.initPostPie(res.data);\n        } else {\n          this.$message({\n            type: 'error',\n            message: res.msg\n          });\n        }\n      });\n    },\n    initRolePie(data) {\n      let chartDom = document.getElementById('role_pie');\n      let myChart = echarts.init(chartDom);\n      let option;\n      option = {\n        title: {\n          text: '角色分类',\n          subtext: '网站角色分类信息',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left'\n        },\n        series: [{\n          name: '角色分类',\n          type: 'pie',\n          radius: '50%',\n          data: data,\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        }]\n      };\n      option && myChart.setOption(option);\n    },\n    initPostPie(data) {\n      let chartDom = document.getElementById('post_pie');\n      let myChart = echarts.init(chartDom);\n      let option;\n      option = {\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          top: '3%',\n          left: 'center'\n        },\n        series: [{\n          name: '需求分类',\n          type: 'pie',\n          radius: ['40%', '70%'],\n          avoidLabelOverlap: false,\n          itemStyle: {\n            borderRadius: 10,\n            borderColor: '#fff',\n            borderWidth: 2\n          },\n          label: {\n            show: false,\n            position: 'center'\n          },\n          emphasis: {\n            label: {\n              show: true,\n              fontSize: 40,\n              fontWeight: 'bold'\n            }\n          },\n          labelLine: {\n            show: false\n          },\n          data: data\n        }]\n      };\n      option && myChart.setOption(option);\n    }\n  }\n};","map":{"version":3,"names":["request","echarts","name","data","activeName","tableData","imgUrl","require","user","localStorage","getItem","JSON","parse","mounted","getNewNotice","initdata","methods","get","then","res","code","id","$message","type","message","msg","initRolePie","initPostPie","chartDom","document","getElementById","myChart","init","option","title","text","subtext","left","tooltip","trigger","legend","orient","series","radius","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","setOption","top","avoidLabelOverlap","borderRadius","borderColor","borderWidth","label","show","position","fontSize","fontWeight","labelLine"],"sources":["src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div>\n    <div>\n      <el-row :gutter=\"20\">\n        <el-col :span=\"12\">\n          <el-card shadow=\"hover\">\n            <div class=\"usercard\">\n              <img class=\"userinfo-avatar\" :src=\"'http://localhost:8080/api/files/' + user.avatar\"></img>\n                <div class=\"userinfo\">\n                  <div class=\"userinfo-name\">{{user.username}}</div>\n                  <div class=\"userinfo-role\">{{user.role}}</div>\n                </div>\n            </div>\n          </el-card>\n        </el-col>\n\n        <el-col :span=\"12\">\n          <el-card shadow=\"hover\">\n            <div>\n              <div style=\"margin-bottom: 15px\">系统公告</div>\n              <el-collapse v-model=\"activeName\" accordion>\n                <el-collapse-item v-for=\"item in tableData\" :title=\"item.name\" :name=\"item.id\">\n                  <div>{{item.content}}</div>\n                </el-collapse-item>\n              </el-collapse>\n            </div>\n          </el-card>\n        </el-col>\n      </el-row>\n    </div>\n    <div style=\"width: 50%;margin-top: 30px\">\n      <div>\n        <div id=\"role_pie\" style=\"width: 100%;height: 400px\"></div>\n        <div id=\"post_pie\" style=\"width: 100%;height: 400px\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport request from \"@/utils/request\";\nimport * as echarts from 'echarts';\nexport default {\n  name: 'HomeView',\n  data(){\n    return{\n      activeName: '1',\n      tableData: [],\n      imgUrl: require('@/assets/img3.png'),\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {},\n    }\n  },\n  mounted(){\n    this.getNewNotice();\n    this.initdata();\n  },\n  methods: {\n    getNewNotice(){\n      request.get(\"/notice\").then(res => {\n        if(res.code === \"0\"){\n          this.tableData = res.data;\n          this.activeName = res.data[0].id;\n        }\n        else{\n          this.$message({\n            type: 'error',\n            message: res.msg\n          });\n        }\n      })\n    },\n    initdata(){\n      request.get(\"/admin/echarts/role_pie\").then(res => {\n        if(res.code === \"0\"){\n          this.initRolePie(res.data);\n        }\n        else{\n          this.$message({\n            type: 'error',\n            message: res.msg\n          });\n        }\n      })\n      request.get(\"post/echarts/pie\").then(res => {\n        if(res.code === \"0\"){\n          this.initPostPie(res.data);\n        }\n        else{\n          this.$message({\n            type: 'error',\n            message: res.msg\n          });\n        }\n      })\n    },\n    initRolePie(data){\n      let chartDom = document.getElementById('role_pie');\n      let myChart = echarts.init(chartDom);\n      let option;\n\n      option = {\n        title: {\n          text: '角色分类',\n          subtext: '网站角色分类信息',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left'\n        },\n        series: [\n          {\n            name: '角色分类',\n            type: 'pie',\n            radius: '50%',\n            data: data,\n            emphasis: {\n              itemStyle: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            }\n          }\n        ]\n      };\n\n      option && myChart.setOption(option);\n    },\n    initPostPie(data){\n      let chartDom = document.getElementById('post_pie');\n      let myChart = echarts.init(chartDom);\n      let option;\n\n      option = {\n\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          top: '3%',\n          left: 'center'\n        },\n        series: [\n          {\n            name: '需求分类',\n            type: 'pie',\n            radius: ['40%', '70%'],\n            avoidLabelOverlap: false,\n            itemStyle: {\n              borderRadius: 10,\n              borderColor: '#fff',\n              borderWidth: 2\n            },\n            label: {\n              show: false,\n              position: 'center'\n            },\n            emphasis: {\n              label: {\n                show: true,\n                fontSize: 40,\n                fontWeight: 'bold'\n              }\n            },\n            labelLine: {\n              show: false\n            },\n            data: data,\n          }\n        ]\n      };\n\n      option && myChart.setOption(option);\n\n    },\n  }\n\n}\n</script>\n\n<style>\n.userinfo-avatar{\n  object-fit: fill;\n  width: 150px;\n  height: 150px;\n  border: 1px solid #ddd;\n  border-radius: 50%;\n  vertical-align: top;\n  background-color: #5fb878;\n}\n.usercard{\n  height: 180px;\n  display: flex;\n  border-bottom: 2px solid #DCDFE6;\n  border-radius: 2px;\n}\n.userinfo {\n  width: auto;\n  padding: 6% 0 0 6%;\n}\n\n.userinfo-name{\n    font-weight: 900;\n    font-size: 25px;\n}\n.userinfo-role{\n  margin-top: 15px;\n  color: #909399;\n}\n</style>"],"mappings":"AAwCA,OAAAA,OAAA;AACA,YAAAC,OAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,UAAA;MACAC,SAAA;MACAC,MAAA,EAAAC,OAAA;MACAC,IAAA,EAAAC,YAAA,CAAAC,OAAA,WAAAC,IAAA,CAAAC,KAAA,CAAAH,YAAA,CAAAC,OAAA;IACA;EACA;EACAG,QAAA;IACA,KAAAC,YAAA;IACA,KAAAC,QAAA;EACA;EACAC,OAAA;IACAF,aAAA;MACAd,OAAA,CAAAiB,GAAA,YAAAC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAf,SAAA,GAAAc,GAAA,CAAAhB,IAAA;UACA,KAAAC,UAAA,GAAAe,GAAA,CAAAhB,IAAA,IAAAkB,EAAA;QACA,OACA;UACA,KAAAC,QAAA;YACAC,IAAA;YACAC,OAAA,EAAAL,GAAA,CAAAM;UACA;QACA;MACA;IACA;IACAV,SAAA;MACAf,OAAA,CAAAiB,GAAA,4BAAAC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAM,WAAA,CAAAP,GAAA,CAAAhB,IAAA;QACA,OACA;UACA,KAAAmB,QAAA;YACAC,IAAA;YACAC,OAAA,EAAAL,GAAA,CAAAM;UACA;QACA;MACA;MACAzB,OAAA,CAAAiB,GAAA,qBAAAC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAO,WAAA,CAAAR,GAAA,CAAAhB,IAAA;QACA,OACA;UACA,KAAAmB,QAAA;YACAC,IAAA;YACAC,OAAA,EAAAL,GAAA,CAAAM;UACA;QACA;MACA;IACA;IACAC,YAAAvB,IAAA;MACA,IAAAyB,QAAA,GAAAC,QAAA,CAAAC,cAAA;MACA,IAAAC,OAAA,GAAA9B,OAAA,CAAA+B,IAAA,CAAAJ,QAAA;MACA,IAAAK,MAAA;MAEAA,MAAA;QACAC,KAAA;UACAC,IAAA;UACAC,OAAA;UACAC,IAAA;QACA;QACAC,OAAA;UACAC,OAAA;QACA;QACAC,MAAA;UACAC,MAAA;UACAJ,IAAA;QACA;QACAK,MAAA,GACA;UACAxC,IAAA;UACAqB,IAAA;UACAoB,MAAA;UACAxC,IAAA,EAAAA,IAAA;UACAyC,QAAA;YACAC,SAAA;cACAC,UAAA;cACAC,aAAA;cACAC,WAAA;YACA;UACA;QACA;MAEA;MAEAf,MAAA,IAAAF,OAAA,CAAAkB,SAAA,CAAAhB,MAAA;IACA;IACAN,YAAAxB,IAAA;MACA,IAAAyB,QAAA,GAAAC,QAAA,CAAAC,cAAA;MACA,IAAAC,OAAA,GAAA9B,OAAA,CAAA+B,IAAA,CAAAJ,QAAA;MACA,IAAAK,MAAA;MAEAA,MAAA;QAEAK,OAAA;UACAC,OAAA;QACA;QACAC,MAAA;UACAU,GAAA;UACAb,IAAA;QACA;QACAK,MAAA,GACA;UACAxC,IAAA;UACAqB,IAAA;UACAoB,MAAA;UACAQ,iBAAA;UACAN,SAAA;YACAO,YAAA;YACAC,WAAA;YACAC,WAAA;UACA;UACAC,KAAA;YACAC,IAAA;YACAC,QAAA;UACA;UACAb,QAAA;YACAW,KAAA;cACAC,IAAA;cACAE,QAAA;cACAC,UAAA;YACA;UACA;UACAC,SAAA;YACAJ,IAAA;UACA;UACArD,IAAA,EAAAA;QACA;MAEA;MAEA8B,MAAA,IAAAF,OAAA,CAAAkB,SAAA,CAAAhB,MAAA;IAEA;EACA;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}