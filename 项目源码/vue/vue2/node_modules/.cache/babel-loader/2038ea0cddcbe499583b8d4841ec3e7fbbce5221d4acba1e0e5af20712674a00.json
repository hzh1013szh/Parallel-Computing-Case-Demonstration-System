{"ast":null,"code":"import request from \"@/utils/request\";\nimport PostItem from \"@/views/Post/PostItem.vue\";\nexport default {\n  name: \"MyPostView\",\n  components: {\n    PostItem\n  },\n  data() {\n    return {\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {},\n      allData: []\n    };\n  },\n  created() {\n    this.getMyPost();\n  },\n  mounted() {\n    this.getMyPost();\n  },\n  methods: {\n    getMyPost() {\n      request.get(`/post/user/${this.user.id}`).then(res => {\n        if (res.code === \"0\") {\n          this.allData = res.data;\n        } else {\n          this.$message({\n            type: 'error',\n            message: res.msg\n          });\n        }\n      });\n    },\n    handleSizeChange(pageSize) {\n      this.params.pageSize = pageSize;\n      this.getPost();\n    },\n    handleCurrentChange(currentPage) {\n      this.params.pageNum = currentPage;\n      this.getPost();\n    }\n  }\n};","map":{"version":3,"names":["request","PostItem","name","components","data","user","localStorage","getItem","JSON","parse","allData","created","getMyPost","mounted","methods","get","id","then","res","code","$message","type","message","msg","handleSizeChange","pageSize","params","getPost","handleCurrentChange","currentPage","pageNum"],"sources":["src/views/person/MyPostView.vue"],"sourcesContent":["\r\n<template>\r\n  <div>\r\n  <template v-if=\"allData.length > 0\">\r\n    <PostItem v-for=\"a in allData\" :key=\"a.id\" v-bind=\"a\" />\r\n  </template>\r\n  <el-empty\r\n      v-else\r\n      :image-size=\"250\"\r\n      description=\"暂未发表任何需求额\"\r\n  ></el-empty>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\nimport PostItem from \"@/views/Post/PostItem.vue\";\r\n\r\nexport default {\r\n  name: \"MyPostView\" ,\r\n  components: {PostItem},\r\n  data(){\r\n    return{\r\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {},\r\n      allData: [],\r\n    }\r\n  },\r\n  created() {\r\n    this.getMyPost();\r\n  },\r\n  mounted() {\r\n    this.getMyPost();\r\n  },\r\n  methods: {\r\n    getMyPost(){\r\n      request.get(`/post/user/${this.user.id}`).then(res => {\r\n        if(res.code === \"0\"){\r\n          this.allData = res.data;\r\n        }\r\n        else{\r\n          this.$message({\r\n            type: 'error',\r\n            message: res.msg\r\n          });\r\n        }\r\n      })\r\n    },\r\n    handleSizeChange(pageSize){\r\n      this.params.pageSize = pageSize;\r\n      this.getPost();\r\n    },\r\n    handleCurrentChange(currentPage){\r\n      this.params.pageNum = currentPage;\r\n      this.getPost();\r\n    },\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n\r\n</style>"],"mappings":"AAeA,OAAAA,OAAA;AACA,OAAAC,QAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IAAAF;EAAA;EACAG,KAAA;IACA;MACAC,IAAA,EAAAC,YAAA,CAAAC,OAAA,WAAAC,IAAA,CAAAC,KAAA,CAAAH,YAAA,CAAAC,OAAA;MACAG,OAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,SAAA;EACA;EACAC,QAAA;IACA,KAAAD,SAAA;EACA;EACAE,OAAA;IACAF,UAAA;MACAZ,OAAA,CAAAe,GAAA,oBAAAV,IAAA,CAAAW,EAAA,IAAAC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAT,OAAA,GAAAQ,GAAA,CAAAd,IAAA;QACA,OACA;UACA,KAAAgB,QAAA;YACAC,IAAA;YACAC,OAAA,EAAAJ,GAAA,CAAAK;UACA;QACA;MACA;IACA;IACAC,iBAAAC,QAAA;MACA,KAAAC,MAAA,CAAAD,QAAA,GAAAA,QAAA;MACA,KAAAE,OAAA;IACA;IACAC,oBAAAC,WAAA;MACA,KAAAH,MAAA,CAAAI,OAAA,GAAAD,WAAA;MACA,KAAAF,OAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}