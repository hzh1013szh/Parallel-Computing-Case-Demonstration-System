{"ast":null,"code":"import request from \"@/utils/request\";\nimport E from 'wangeditor';\nlet editor;\nfunction initEditor(content) {\n  setTimeout(() => {\n    if (!editor) {\n      editor = new E('#editor');\n      editor.config.placeholder = \"请输入内容\";\n      editor.config.uploadFileName = \"file\";\n      editor.config.uploadImgServer = \"http://localhost:8080/api/files/wang/upload\";\n      editor.create();\n    }\n    editor.txt.html(content);\n  });\n}\nexport default {\n  name: \"AddPostView\",\n  data() {\n    return {\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {},\n      form: {\n        title: \"\",\n        content: \"\",\n        status: \"\",\n        userid: \"\",\n        img: '',\n        role: '',\n        username: ''\n      }\n    };\n  },\n  created() {\n    this.getStaging();\n  },\n  mounted() {\n    this.getStaging();\n    this.$nextTick(() => {\n      initEditor(this.form.content || \"\"); // 确保编辑器在 DOM 挂载后初始化\n    });\n  },\n  methods: {\n    getStaging() {\n      request.get(\"post/staging\", {\n        params: {\n          userid: this.user.id\n        }\n      }).then(res => {\n        if (res.code === \"0\") {\n          this.form = res.data;\n          initEditor(this.form.content);\n        } else {\n          this.$message({\n            type: 'error',\n            message: res.msg\n          });\n        }\n      });\n    },\n    staging() {\n      this.form.content = editor.txt.html();\n      this.form.status = \"0\";\n      this.form.userid = this.user.id;\n      this.form.role = this.user.role;\n      this.form.username = this.user.username;\n      request.post(\"/post\", this.form).then(res => {\n        if (res.code === \"0\") {\n          this.$message({\n            type: 'success',\n            message: '暂存成功'\n          });\n          this.getStaging();\n        } else {\n          this.$message({\n            type: 'error',\n            message: res.msg\n          });\n        }\n      });\n    },\n    submit() {\n      this.form.content = editor.txt.html();\n      this.form.status = \"1\";\n      this.form.userid = this.user.id;\n      this.form.role = this.user.role;\n      this.form.username = this.user.username;\n      request.post(\"/post\", this.form).then(res => {\n        if (res.code === \"0\") {\n          this.$message({\n            type: 'success',\n            message: '发布成功'\n          });\n        } else {\n          this.$message({\n            type: 'error',\n            message: res.msg\n          });\n        }\n      });\n    },\n    HandlerSuccess(res) {\n      this.form.img = res.data;\n    }\n  }\n};","map":{"version":3,"names":["request","E","editor","initEditor","content","setTimeout","config","placeholder","uploadFileName","uploadImgServer","create","txt","html","name","data","user","localStorage","getItem","JSON","parse","form","title","status","userid","img","role","username","created","getStaging","mounted","$nextTick","methods","get","params","id","then","res","code","$message","type","message","msg","staging","post","submit","HandlerSuccess"],"sources":["src/views/Post/AddPostView.vue"],"sourcesContent":["\r\n<template>\r\n  <div>\r\n    <el-card>\r\n      <div slot=\"header\">\r\n        <span>发布帖子</span>\r\n      </div>\r\n      <el-form ref=\"form\" :model=\"form\" label-width=\"80px\" id=\"form\">\r\n        <el-form-item label=\"标题\">\r\n          <el-input v-model=\"form.title\" placeholder=\"请输入标题\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"封面\">\r\n          <el-upload action=\"http://localhost:8080/api/files/upload\" :on-success=\"HandlerSuccess\">\r\n            <el-button size=\"small\" type=\"primary\">点击上传</el-button>\r\n          </el-upload>\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\">\r\n          <el-input v-model=\"form.description\" placeholder=\"请输入描述\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"内容\">\r\n          <div id=\"editor\"></div>\r\n        </el-form-item>\r\n        <div style=\"margin-left: 80px\">\r\n          <el-button type=\"primary\" @click=\"staging()\">暂存</el-button>\r\n          <el-button type=\"primary\" @click=\"submit()\">立即上传</el-button>\r\n        </div>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n<script>\r\nimport request from \"@/utils/request\";\r\nimport E from 'wangeditor'\r\nlet editor\r\nfunction initEditor(content){ setTimeout(() => {\r\n  if(!editor){\r\n    editor = new E('#editor')\r\n    editor.config.placeholder = \"请输入内容\"\r\n    editor.config.uploadFileName = \"file\"\r\n    editor.config.uploadImgServer = \"http://localhost:8080/api/files/wang/upload\"\r\n    editor.create();\r\n  }\r\n  editor.txt.html(content)\r\n})\r\n}\r\nexport default {\r\n  name: \"AddPostView\",\r\n  data() {\r\n    return {\r\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {},\r\n      form: {\r\n        title: \"\",\r\n        content: \"\",\r\n        status: \"\",\r\n        userid: \"\",\r\n        img:'',\r\n        role:'',\r\n        username:'',\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    this.getStaging();\r\n  },\r\n  mounted() {\r\n    this.getStaging();\r\n    this.$nextTick(() => {\r\n      initEditor(this.form.content || \"\"); // 确保编辑器在 DOM 挂载后初始化\r\n    });\r\n  },\r\n  methods: {\r\n    getStaging(){\r\n      request.get(\"post/staging\", {params:{userid: this.user.id}}).then(res => {\r\n        if(res.code === \"0\"){\r\n          this.form = res.data;\r\n          initEditor(this.form.content)\r\n        }\r\n        else{\r\n          this.$message({\r\n            type: 'error',\r\n            message: res.msg\r\n          });\r\n        }\r\n      })\r\n    },\r\n    staging(){\r\n      this.form.content = editor.txt.html();\r\n      this.form.status = \"0\";\r\n      this.form.userid = this.user.id;\r\n      this.form.role = this.user.role;\r\n      this.form.username = this.user.username;\r\n      request.post(\"/post\",this.form).then(res => {\r\n        if(res.code === \"0\"){\r\n          this.$message({\r\n            type: 'success',\r\n            message: '暂存成功'\r\n          });\r\n          this.getStaging();\r\n        }\r\n        else{\r\n          this.$message({\r\n            type: 'error',\r\n            message: res.msg\r\n          });\r\n        }\r\n      })\r\n    },\r\n    submit(){\r\n      this.form.content = editor.txt.html();\r\n      this.form.status = \"1\";\r\n      this.form.userid = this.user.id;\r\n      this.form.role = this.user.role;\r\n      this.form.username = this.user.username;\r\n      request.post(\"/post\",this.form).then(res => {\r\n        if(res.code === \"0\"){\r\n          this.$message({\r\n            type: 'success',\r\n            message: '发布成功'\r\n          });\r\n        }\r\n        else{\r\n          this.$message({\r\n            type: 'error',\r\n            message: res.msg\r\n          });\r\n        }\r\n      })\r\n    },\r\n    HandlerSuccess(res){\r\n      this.form.img = res.data;\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.content{\r\n  height: 700px;\r\n}\r\n</style>\r\n"],"mappings":"AA+BA,OAAAA,OAAA;AACA,OAAAC,CAAA;AACA,IAAAC,MAAA;AACA,SAAAC,WAAAC,OAAA;EAAAC,UAAA;IACA,KAAAH,MAAA;MACAA,MAAA,OAAAD,CAAA;MACAC,MAAA,CAAAI,MAAA,CAAAC,WAAA;MACAL,MAAA,CAAAI,MAAA,CAAAE,cAAA;MACAN,MAAA,CAAAI,MAAA,CAAAG,eAAA;MACAP,MAAA,CAAAQ,MAAA;IACA;IACAR,MAAA,CAAAS,GAAA,CAAAC,IAAA,CAAAR,OAAA;EACA;AACA;AACA;EACAS,IAAA;EACAC,KAAA;IACA;MACAC,IAAA,EAAAC,YAAA,CAAAC,OAAA,WAAAC,IAAA,CAAAC,KAAA,CAAAH,YAAA,CAAAC,OAAA;MACAG,IAAA;QACAC,KAAA;QACAjB,OAAA;QACAkB,MAAA;QACAC,MAAA;QACAC,GAAA;QACAC,IAAA;QACAC,QAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,UAAA;EACA;EACAC,QAAA;IACA,KAAAD,UAAA;IACA,KAAAE,SAAA;MACA3B,UAAA,MAAAiB,IAAA,CAAAhB,OAAA;IACA;EACA;EACA2B,OAAA;IACAH,WAAA;MACA5B,OAAA,CAAAgC,GAAA;QAAAC,MAAA;UAAAV,MAAA,OAAAR,IAAA,CAAAmB;QAAA;MAAA,GAAAC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAjB,IAAA,GAAAgB,GAAA,CAAAtB,IAAA;UACAX,UAAA,MAAAiB,IAAA,CAAAhB,OAAA;QACA,OACA;UACA,KAAAkC,QAAA;YACAC,IAAA;YACAC,OAAA,EAAAJ,GAAA,CAAAK;UACA;QACA;MACA;IACA;IACAC,QAAA;MACA,KAAAtB,IAAA,CAAAhB,OAAA,GAAAF,MAAA,CAAAS,GAAA,CAAAC,IAAA;MACA,KAAAQ,IAAA,CAAAE,MAAA;MACA,KAAAF,IAAA,CAAAG,MAAA,QAAAR,IAAA,CAAAmB,EAAA;MACA,KAAAd,IAAA,CAAAK,IAAA,QAAAV,IAAA,CAAAU,IAAA;MACA,KAAAL,IAAA,CAAAM,QAAA,QAAAX,IAAA,CAAAW,QAAA;MACA1B,OAAA,CAAA2C,IAAA,eAAAvB,IAAA,EAAAe,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAC,QAAA;YACAC,IAAA;YACAC,OAAA;UACA;UACA,KAAAZ,UAAA;QACA,OACA;UACA,KAAAU,QAAA;YACAC,IAAA;YACAC,OAAA,EAAAJ,GAAA,CAAAK;UACA;QACA;MACA;IACA;IACAG,OAAA;MACA,KAAAxB,IAAA,CAAAhB,OAAA,GAAAF,MAAA,CAAAS,GAAA,CAAAC,IAAA;MACA,KAAAQ,IAAA,CAAAE,MAAA;MACA,KAAAF,IAAA,CAAAG,MAAA,QAAAR,IAAA,CAAAmB,EAAA;MACA,KAAAd,IAAA,CAAAK,IAAA,QAAAV,IAAA,CAAAU,IAAA;MACA,KAAAL,IAAA,CAAAM,QAAA,QAAAX,IAAA,CAAAW,QAAA;MACA1B,OAAA,CAAA2C,IAAA,eAAAvB,IAAA,EAAAe,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAC,QAAA;YACAC,IAAA;YACAC,OAAA;UACA;QACA,OACA;UACA,KAAAF,QAAA;YACAC,IAAA;YACAC,OAAA,EAAAJ,GAAA,CAAAK;UACA;QACA;MACA;IACA;IACAI,eAAAT,GAAA;MACA,KAAAhB,IAAA,CAAAI,GAAA,GAAAY,GAAA,CAAAtB,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}